---
overview: |
  # AWS Resources in Sandbox
  
  This sandbox is created with an EC2 Linux VM as a development environment.
  Click the resource `linux` to see the detailed instructions.

env:
- EC2_INSTANCE_TYPE=t2.micro
- EC2_DISK_GB=10
customizations:
- env:
    name: EC2_INSTANCE_TYPE
    display_name: Instance Type
    description: Specify the instance_type of the Linux VM.
    choice:
      options:
      - t2.micro
      - t3.large
      - m6i.2xlarge
- env:
    name: EC2_DISK_GB
    display_name: Disk Size in GB
    description: Specify the disk size in GB of the Linux VM.
    validators:
    - regexp: '^\d+$'
    choice:
      editable: true
      options:
      - '100'
      - '200'
      - '500'
endpoints:
- name: term
  http:
    auth_proxy:
      disabled: true
    routes:
    - path_prefix: /
      backend:
        target: tf
        port: term
- name: ide
  http:
    auth_proxy:
      disabled: true
    routes:
    - path_prefix: /
      backend:
        target: tf
        port: ide
workspaces:
- name: tf
  ports:
  - name: term
    port: 8080
    protocol: HTTP/TCP
  - name: ide
    port: 8081
    protocol: HTTP/TCP
  checkouts:
  - path: demo
    repo:
      git: https://github.com/crafting-demo/solutions
    manifest:
      overlays:
      - file: apps/aws-linuxvm/manifest.yaml
  packages:
  - name: golang
    version: ~1
  env:
  - AWS_CONFIG_FILE=/run/sandbox/fs/secrets/shared/aws-config
  - SSH_KEYPAIR_FILE=/run/sandbox/fs/secrets/shared/ec2-keypair-shared.pem
  base_snapshot: shared/base-dev-r1
  home_snapshot: shared/home-dev-r1
  probes:
    readiness:
    - name: ssh
      command: /home/owner/demo/apps/aws-linuxvm/term.sh true
    - name: ide
      http_get:
        port: 8081
        path: /
resources:
- name: linux
  brief: EC2 Linux VM
  details: |
    EC2 Linux VM:
    
    To Access:
    - [WebIDE](http://{{state.private_ip.value}}:{{state.vscode_server_port.value}})
    - [VSCode](vscode://vscode-remote/{{state.private_ip.value}}{{state.home_dir.value}})
    - SSH: `{{state.user.value}}@{{state.private_ip.value}}`
    - PrivateIP: {{state.private_ip.value}}

  handlers:
    on_create:
      max_retries: 3
      timeout: 1800s
      save_state: true
      use_workspace:
        name: tf
        run:
          dir: demo/apps/aws-linuxvm/tf
          cmd: |
            set -ex
            terraform init >&2
            terraform apply -auto-approve -var instance_type=$EC2_INSTANCE_TYPE -var root_volume_size=$EC2_DISK_GB >&2
            terraform output -json
    on_delete:
      max_retries: 3
      timeout: 1800s
      use_workspace:
        name: tf
        run:
          dir: demo/apps/aws-linuxvm/tf
          cmd: terraform destroy -auto-approve >&2
