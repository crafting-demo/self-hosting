---
overview: |
  # AWS Resources in Sandbox
  
  This sandbox is created with an EC2 Linux VM as a development environment.

  The VM can be accessed on `{{resources.linux.state.private_ip.value}}`:
  - [WebTerminal]({{endpoints.term.url}}), [WebIDE]({{endpoints.ide.url}})
  - [VSCode](vscode://vscode-remote/ssh-remote%2B{{resources.linux.state.private_ip.value}}{{resources.linux.state.home_dir.value}}/src)
  - SSH: `ssh {{resources.linux.state.user.value}}@{{resources.linux.state.private_ip.value}}`

  Click the resource `linux` to see more details.

env:
- EC2_INSTANCE_TYPE=t2.micro
- EC2_DISK_GB=100
customizations:
- env:
    name: EC2_INSTANCE_TYPE
    display_name: Instance Type
    description: Specify the instance_type of the Linux VM.
    choice:
      options:
      - t2.micro
      - t3.large
      - m6i.2xlarge
- env:
    name: EC2_DISK_GB
    display_name: Disk Size in GB
    description: Specify the disk size in GB of the Linux VM.
    validators:
    - regexp: '^\d+$'
    choice:
      editable: true
      options:
      - '100'
      - '200'
      - '500'
endpoints:
- name: term
  http:
    auth_proxy:
      disabled: true
    routes:
    - path_prefix: /
      backend:
        target: tf
        port: term
- name: ide
  http:
    auth_proxy:
      disabled: true
    routes:
    - path_prefix: /
      backend:
        target: tf
        port: ide
    path: '/?folder=/home/ubuntu/src'
workspaces:
- name: tf
  ports:
  - name: term
    port: 8080
    protocol: HTTP/TCP
  - name: ide
    port: 8081
    protocol: HTTP/TCP
  checkouts:
  - path: demo
    repo:
      git: https://github.com/crafting-demo/solutions
    manifest:
      overlays:
      - file: apps/aws-linuxvm/manifest.yaml
  packages:
  - name: golang
    version: ~1
  env:
  - AWS_CONFIG_FILE=/run/sandbox/fs/secrets/shared/aws-config
  base_snapshot: shared/base-dev-r1
  home_snapshot: shared/home-dev-r1
  probes:
    readiness:
    - name: ssh
      command: /home/owner/demo/apps/aws-linuxvm/term.sh true
    - name: ide
      http_get:
        port: 8081
        path: /
resources:
- name: linux
  brief: EC2 Linux VM
  details: |
    EC2 Linux VM:
    
    |Launch Template|Instance Type|Disk Size|
    |---------------|-------------|---------|
    |{{state.launch_template.value}}|{{state.instance_type.value}}|{{state.root_volume_size.value}}G|

    To Access:
    - [Terminal]({{endpoints.term.url}})
    - [WebIDE](http://{{state.private_ip.value}}:{{state.vscode_server_port.value}}/?folder={{state.home_dir.value}}/src)
    - [VSCode](vscode://vscode-remote/ssh-remote%2B{{state.private_ip.value}}{{state.home_dir.value}}/src)
    - SSH: `ssh {{state.user.value}}@{{state.private_ip.value}}`
    - PrivateIP: {{state.private_ip.value}}
  terraform:
    workspace: tf
    dir: demo/apps/aws-linuxvm/tf
    run:
      timeout: 600s
      vars:
        instance_type: '$EC2_INSTANCE_TYPE'
        root_volume_size: '$EC2_DISK_GB'
    save_state: true
customizations:
- property_set:
    type: crafting.dev/sandbox/express-workspace
    properties:
      os: linux
      summary: 'Linux on an EC2 instance'
      ip: '{{resources.linux.state.private_ip.value}}'
      webterm_url: '{{endpoints.term.url}}'
      webide_url: 'http://{{resources.linux.state.private_ip.value}}:{{resources.linux.state.vscode_server_port.value}}/?folder={{resources.linux.state.home_dir.value}}/src'
      vscode_url: 'vscode://vscode-remote/ssh-remote%2B{{resources.linux.state.private_ip.value}}{{resources.linux.state.home_dir.value}}/src'
      ssh_command: 'ssh {{resources.linux.state.user.value}}@{{resources.linux.state.private_ip.value}}'
