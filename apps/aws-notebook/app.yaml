---
overview: |
  # Jupter Notebook
endpoints:
  - name: jupyter-notebook
    http:
      routes:
        - backend:
            target: jupyter-notebook
            port: notebook-service
          path_prefix: /
workspaces:
  - name: jupyter-notebook
    ports:
      - name: notebook-service
        port: 8888
        protocol: HTTP/TCP
    checkouts:
      - path: dev
        repo:
          git: git@github.com:crafting-demo/solutions.git
        manifest:
          overlays:
            - file: apps/aws-notebook/manifest.yaml
    env:
      - AWS_CONFIG_FILE=/run/sandbox/fs/secrets/shared/aws-config
      - OPENVPN_CONFIG_FILE=/run/sandbox/fs/secrets/shared/openvpn-config
      - ECS_CLUSTER_NAME=
      - SUBNET_ID=
      - SERVICE_LAUNCH_TYPE=FARGATE
      - TASK_IMAGE=
      - SECURITY_GROUPS=
    base_snapshot: base-notebook-v1
    probes:
      readiness:
        - name: http
          http_get:
            port: 8888
            path: /
resources:
  - name: aws-ecs-service
    brief: AWS ECS Service
    handlers:
      on_create:
        save_state: true
        max_retries: 3
        timeout: 1800s
        use_workspace:
          name: jupyter-notebook
          run:
            dir: dev/apps/aws-notebook/tf
            cmd: ./on_create.sh
      on_delete:
        max_retries: 3
        timeout: 1800s
        use_workspace:
          name: jupyter-notebook
          run:
            dir: dev/apps/aws-notebook/tf
            cmd: >
              terraform apply -destroy -auto-approve
              -var="ecs_cluster_name=${ECS_CLUSTER_NAME}"  
              -var="subnet_id=${SUBNET_ID}" 
              -var="security_groups=${SECURITY_GROUPS}" 
              -var="service_launch_type=${SERVICE_LAUNCH_TYPE}"  
              -var="task_image=${TASK_IMAGE}"
