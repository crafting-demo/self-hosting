---
overview: |
  # Jupyter Notebook with cells running in AWS Elastic Container Service.
endpoints:
  - name: notebook
    http:
      routes:
        - backend:
            target: notebook
            port: notebook
          path_prefix: /
workspaces:
  - name: notebook
    ports:
      - name: notebook
        port: 8888
        protocol: HTTP/TCP
    checkouts:
      - path: solutions
        repo:
          git: https://github.com/crafting-demo/solutions
        manifest:
          overlays:
          - content: |
              daemons:
                openvpn:
                  run:
                    cmd: sudo openvpn --config "$OPENVPN_CONFIG_FILE"
                notebook:
                  run:
                    cmd: ./apps/aws-notebook/notebook.sh
    base_snapshot: oci://us-docker.pkg.dev/crafting-playground/demo/notebook/workspace:latest
    probes:
      readiness:
        - name: http
          http_get:
            port: 8888
            path: /
        - name: remote
          command: '/home/owner/solutions/apps/aws-notebook/ecs_target.sh'
          interval: 1s
    env:
    - AWS_CONFIG_FILE=/run/sandbox/fs/secrets/shared/aws-config
    - OPENVPN_CONFIG_FILE=/run/sandbox/fs/secrets/shared/openvpn-config
resources:
  - name: ecs
    brief: AWS ECS Service for Notebook Execution
    terraform:
      workspace: notebook
      dir: solutions/apps/aws-notebook/tf
      run:
        vars:
          # Please customize the following configurations.
          ecs_cluster_name: ECS_CLUSTER_NAME
          ecs_task_exec_role_arn: arn:aws:iam::ACCOUNT_ID:role/ROLE_NAME
          ecs_task_image: us-docker.pkg.dev/crafting-playground/demo/notebook/task:latest
          subnet_ids: '["subnet1_id", "subnet2_id"]'
          security_group_ids: '["sg1_id", "sg2_id"]'
      save_state: true
